
//Solution1
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int len=nums.length;
        int [] a=new int[2];
        for(int i=0;i<len;i++){
            for(int k=i+1;k<len;k++){
                if((nums[i]+nums[k])==target){
                    a[0]=i;
                    a[1]=k;
                    return a;
                }
            }
        }
        return a;
    }
}

//Solution2
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int len=nums.length;
        Map<Integer,Integer> map=new HashMap<Integer,Integer>();
        for(int i=0;i<len;i++){
            int number=target-nums[i];
            if(map.containsKey(number)){
                return new int[]{map.get(number),i};
            }
            map.put(nums[i],i);
        }
        throw new RuntimeException();
    }
}
